/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hneen.myoop.GUI;

import com.hneen.myoop.*;

import javax.swing.*;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author hneen
 */
public class orders_summary extends javax.swing.JFrame {

    /**
     * Creates new form orders_summary
     */
    List<order_record> summary = new ArrayList<order_record>();
    String user=null;
    String pass=null;
    public orders_summary(){
        initComponents();
    }
    public orders_summary(String user ,String pass) {
        initComponents();
        this.pass=pass;
        this.user=user;
        Order_summary();
        order_smaryTextArea1.setEnabled(false);
      if (summary!=null) {
            for (order_record s : summary) {
                order_smaryTextArea1.append(s.toString()+"\n\n-----------------------------------------------------------------------------------------------------------------------------\n\n");
            }
        }
      else {
          JOptionPane.showMessageDialog(this, "List is Empty", "Error", JOptionPane.ERROR_MESSAGE);

      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        order_smaryTextArea1 = new javax.swing.JTextArea();
        print_outButton1 = new javax.swing.JButton();
        back_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(244, 244, 248));

        jPanel2.setBackground(new java.awt.Color(44, 42, 65));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\hneen\\Documents\\NetBeansProjects\\project_oop2\\src\\main\\icons\\box.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Order Summary");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        order_smaryTextArea1.setColumns(20);
        order_smaryTextArea1.setRows(5);
        jScrollPane1.setViewportView(order_smaryTextArea1);

        print_outButton1.setBackground(new java.awt.Color(253, 191, 80));
        print_outButton1.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        print_outButton1.setForeground(new java.awt.Color(0, 0, 0));
        print_outButton1.setText("Print it Out");
        print_outButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_outButton1ActionPerformed(evt);
            }
        });

        back_Button.setBackground(new java.awt.Color(253, 191, 80));
        back_Button.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        back_Button.setForeground(new java.awt.Color(0, 0, 0));
        back_Button.setText("Back");
        back_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(print_outButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(print_outButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(back_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_ButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        manager_dord d= new manager_dord(user,pass);
        d.setTitle("dashbord");
        d.setVisible(true);
    }//GEN-LAST:event_back_ButtonActionPerformed

    private void print_outButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_outButton1ActionPerformed
        // TODO add your handling code here:
        PrintItOut();

    }//GEN-LAST:event_print_outButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orders_summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orders_summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orders_summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orders_summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orders_summary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea order_smaryTextArea1;
    private javax.swing.JButton print_outButton1;
    // End of variables declaration//GEN-END:variables

    void Order_summary() {
        Order order=null;
        Payment payment=null;
        Customer customer=null;
        java.sql.Date date;
        int num_item=0;
        DB conn = new DB();
        Connection dbconn = conn.connectDB();

        try {
            //select all order
          PreparedStatement   order_record = dbconn.prepareStatement("SELECT * FROM sunshine.order_record");
            ResultSet order1 = order_record.executeQuery();

            while (order1.next()) {
                try {
                   PreparedStatement   orderInfo = dbconn.prepareStatement("SELECT * FROM sunshine.order_shipping where order_id=?");
                    orderInfo.setInt(1, order1.getInt("order_id"));
                    ResultSet shipping = orderInfo.executeQuery();
                    if (shipping.next()) {
                        order = new Shipping(shipping.getInt("order_id"), shipping.getString("Company_Name"), shipping.getDouble("price_Of_shipping"), shipping.getDate("Time_of_shipping"));
                        shipping.close();
                    }
                    orderInfo = dbconn.prepareStatement("SELECT * FROM receiptofrequest where order_id=?");
                    orderInfo.setInt(1, order1.getInt("order_id"));
                   ResultSet  pick = orderInfo.executeQuery();
                    if (pick.next()) {
                        order=new pick_up(pick.getInt("Order_id"),pick.getDate("Time_of_Request"));
                        pick.close();
                    }

                   PreparedStatement  payInfo=dbconn.prepareStatement("SELECT * FROM sunshine.cash where Payment_id=?");
                    payInfo.setInt(1,order1.getInt("pay_id"));
                   ResultSet  cash=payInfo.executeQuery();
                    if (cash.next()){
                        payment= new cash(cash.getInt("Payment_id"),cash.getDouble("Order_Total_price"),cash.getString("currency"));
                        num_item=cash.getInt("num_items");
                        cash.close();
                    }
                     payInfo=dbconn.prepareStatement("SELECT * FROM sunshine.card where Payment_id=?");
                    payInfo.setInt(1,order1.getInt("pay_id"));
                   ResultSet  card=payInfo.executeQuery();
                    if (card.next()){
                        payment= new card();
                        payment.setPay_id(card.getInt("Payment_id"));
                        payment.setTotal_price(card.getDouble("Order_Total_price"));
                        num_item=card.getInt("num_items");
                        card.close();
                    }

                  PreparedStatement   customerInfo=dbconn.prepareStatement("SELECT coustomer_id , coustomer_name  FROM sunshine.customer where coustomer_id=?");
                    customerInfo.setInt(1,order1.getInt("custemer_id"));
                   ResultSet  cus=customerInfo.executeQuery();
                    if (cus.next()){
                        customer=new Customer();
                        customer.setId(cus.getInt("coustomer_id"));
                        customer.setName(cus.getString("coustomer_name"));
                        cus.close();
                    }

                  if (order!=null && payment!=null && customer!=null && num_item!=0) {
                        summary.add(new order_record(order, payment, customer, num_item));
                    }
                  payInfo.close();
                  customerInfo.close();

                } catch (SQLException e) {
                    e.printStackTrace();
                }

            }
            order_record.close();
            order1.close();
        } catch (SQLException e) {
            e.printStackTrace();

        }finally {
            try {
                dbconn.close();
            }catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    void PrintItOut()  {
        Path fileName = Path.of(
                "C:\\Users\\hneen\\Documents\\NetBeansProjects\\MyOOP\\src\\main\\files\\orders_summary.txt");

        // Writing into the file
        order_smaryTextArea1.setEnabled(false);
        if (summary!=null) {
            try {
                Files.writeString(fileName,order_smaryTextArea1.getText());
                JOptionPane.showMessageDialog(this, "Print Out done", "successfully", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "List is Empty", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }
}

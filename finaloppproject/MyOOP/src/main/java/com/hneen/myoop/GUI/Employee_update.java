/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hneen.myoop.GUI;

import com.hneen.myoop.Account;
import com.hneen.myoop.DB;
import com.hneen.myoop.Employee;
import net.proteanit.sql.DbUtils;


import javax.swing.*;
import java.sql.*;
import java.time.LocalDate;
import java.util.List;

/**
 *
 * @author hneen
 */
public class Employee_update extends javax.swing.JFrame {

    /**
     * Creates new form Employee_update
     */
    String user=null;
    String pass=null;
    public Employee_update() {
        initComponents();
    }
    Employee e =new Employee();
    Account c=new Account();
    public Employee_update(String user,String pass) {
        initComponents();
        setDefault();
        this.user=user;
        this.pass=pass;

        e.openFile();
        e.addRecord();
        e.close();

        c.openFile();
        c.addRecord();
        c.close();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Employee_Table1 = new javax.swing.JTable();
        Delete_Button1 = new javax.swing.JButton();
        import_Button2 = new javax.swing.JButton();
        back_butoom = new javax.swing.JButton();
        Send_Button4 = new javax.swing.JButton();
        salary_TextField1 = new javax.swing.JTextField();
        find_Button5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        find_TextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(244, 244, 248));

        jPanel2.setBackground(new java.awt.Color(44, 42, 65));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Employees Information ");

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\hneen\\Documents\\NetBeansProjects\\project_oop2\\src\\main\\icons\\career.png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Employee_Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Employee_Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Employee_Table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Employee_Table1);

        Delete_Button1.setBackground(new java.awt.Color(253, 191, 80));
        Delete_Button1.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        Delete_Button1.setForeground(new java.awt.Color(0, 0, 0));
        Delete_Button1.setText("Delete");
        Delete_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Button1ActionPerformed(evt);
            }
        });

        import_Button2.setBackground(new java.awt.Color(253, 191, 80));
        import_Button2.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        import_Button2.setForeground(new java.awt.Color(0, 0, 0));
        import_Button2.setText("Import Info");
        import_Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_Button2ActionPerformed(evt);
            }
        });

        back_butoom.setBackground(new java.awt.Color(253, 191, 80));
        back_butoom.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        back_butoom.setForeground(new java.awt.Color(0, 0, 0));
        back_butoom.setText("Back");
        back_butoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_butoomActionPerformed(evt);
            }
        });

        Send_Button4.setBackground(new java.awt.Color(253, 191, 80));
        Send_Button4.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        Send_Button4.setForeground(new java.awt.Color(0, 0, 0));
        Send_Button4.setText("Send");
        Send_Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_Button4ActionPerformed(evt);
            }
        });

        find_Button5.setBackground(new java.awt.Color(253, 191, 80));
        find_Button5.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        find_Button5.setForeground(new java.awt.Color(0, 0, 0));
        find_Button5.setText("Find");
        find_Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_Button5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Find Employee by First Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("set the Salary of Selected Employee:");

        find_TextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_TextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Delete_Button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(import_Button2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back_butoom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(salary_TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Send_Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(find_TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(find_Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Delete_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(import_Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(back_butoom, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(find_Button5)
                    .addComponent(salary_TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Send_Button4)
                    .addComponent(find_TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_butoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_butoomActionPerformed
        // TODO add your handling code here:
        
         if (pass!=null && user!=null ){
            dispose();
            manager_dord d= new manager_dord(user,pass);
            d.setTitle("dashbord");
            d.setVisible(true);
        }
    }//GEN-LAST:event_back_butoomActionPerformed

    private void Delete_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Button1ActionPerformed
        // TODO add your handling code here:
      if (Employee_Table1.getSelectedRow()>=0) {
            int getIdE = -1;
            int row = Employee_Table1.getSelectedRow();
            getIdE = Integer.parseInt(Employee_Table1.getModel().getValueAt(row, 0).toString());
            if (getIdE != -1) {
                deleteE(getIdE);
            }
        }else {
          JOptionPane.showMessageDialog(this, "Select Employee to delete!", "Error", JOptionPane.ERROR_MESSAGE);
      }
//        deleteE();

        
    }//GEN-LAST:event_Delete_Button1ActionPerformed

    private void Send_Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_Button4ActionPerformed
        // TODO add your handling code here:
        if (Employee_Table1.getSelectedRow()>=0) {
            int getIdE = -1;
            int row = Employee_Table1.getSelectedRow();
            getIdE = Integer.parseInt(Employee_Table1.getModel().getValueAt(row, 0).toString());
            String salary=null;
             salary=salary_TextField1.getText();
            if (!salary.equals("")){
                if (salary.matches("[0.0-9.0]+")) {
                    double salary1=Double.parseDouble(salary);
                if (salary1<=10000){
                        if (getIdE != -1) {
                            setSalary(getIdE, salary1);
                        }
                    }else {
                    JOptionPane.showMessageDialog(this, "Salary shouldn't be greater than 10K! ", "Error", JOptionPane.ERROR_MESSAGE);

                }
                }else {
                    JOptionPane.showMessageDialog(this, "Enter number only!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Set a salary first!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(this, "Select Employee to delete!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_Send_Button4ActionPerformed

    private void find_Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_Button5ActionPerformed
        // TODO add your handling code here:
        String key="";
        key=find_TextField3.getText();
//        key.trim();
        if (!key.equals("")){
            FindByName(key);
        }else {
            JOptionPane.showMessageDialog(this, "Set a Key first!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_find_Button5ActionPerformed

    private void import_Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_Button2ActionPerformed
        // TODO add your handling code here:
        EmSer();
        setDefault();
        
    }//GEN-LAST:event_import_Button2ActionPerformed

    private void find_TextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_TextField3ActionPerformed
        // TODO add your handling code here:
        setDefault();
    }//GEN-LAST:event_find_TextField3ActionPerformed

    private void Employee_Table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Employee_Table1MouseClicked
        // TODO add your handling code here:
//                setDefault();
    }//GEN-LAST:event_Employee_Table1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee_update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete_Button1;
    private javax.swing.JTable Employee_Table1;
    private javax.swing.JButton Send_Button4;
    private javax.swing.JButton back_butoom;
    private javax.swing.JButton find_Button5;
    private javax.swing.JTextField find_TextField3;
    private javax.swing.JButton import_Button2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField salary_TextField1;
    // End of variables declaration//GEN-END:variables
    void setDefault(){
        DB conn=new DB();
        Connection dbconn=conn.connectDB();
        PreparedStatement selectAll=null;
        ResultSet selectE=null;
      try {
             selectAll = dbconn.prepareStatement("SELECT * FROM sunshine.employee");
           selectE= selectAll.executeQuery();
//          Employee_Table1=new JTable();
          Employee_Table1.setModel(DbUtils.resultSetToTableModel(selectE));
        } catch (SQLException e) {
          e.printStackTrace();
      }
//      finally {
//          try{
//            dbconn.close();
//            selectAll.close();
//            selectE.close();
//          }catch (SQLException e) {
//              e.printStackTrace();
//          }
//      }

    }

    void deleteE(int id){
        DB conn = new DB();
        Connection dbconn = conn.connectDB();
        PreparedStatement delete=null;
      try  {

             delete=dbconn.prepareStatement("DELETE FROM person WHERE (id = ?)");
            delete.setInt(1,id);
            int doDelete = delete.executeUpdate();
            if (doDelete==1){
                JOptionPane.showMessageDialog(this, "delete done!", "successful", JOptionPane.INFORMATION_MESSAGE);
                setDefault();
            }else {
                System.out.println("error");
            }
        }catch (Exception e){
          e.printStackTrace();
      }finally {
          try {
            dbconn.close();
            delete.close();
          }catch (Exception e){
              e.printStackTrace();
          }
      }
    }

    void setSalary(int id ,double salary){
        DB conn = new DB();
        Connection dbconn = conn.connectDB();
        PreparedStatement update=null;
        try{
            LocalDate today =  LocalDate.now();             //Today
            LocalDate PayDate = today.plusDays(14);
            java.sql.Date d = java.sql.Date.valueOf( PayDate ) ;

             update=dbconn.prepareStatement("UPDATE employee SET salary =? ,payment_date=? WHERE (Employee_id =?)");
            update.setDouble(1,salary);
            update.setDate(2,d);
            update.setInt(3,id);
            int doUpdate = update.executeUpdate();
            if (doUpdate==1){
                JOptionPane.showMessageDialog(this, "Update done!", "successful", JOptionPane.INFORMATION_MESSAGE);
                setDefault();
            }
        }catch (Exception e){
            e.printStackTrace();
        }finally {
            try{
                dbconn.close();
                update.close();
            }catch (SQLException e){
                e.printStackTrace();
            }
        }
    }

    void FindByName(String key){
        DB conn = new DB();
        Connection dbconn = conn.connectDB();
        Statement find=null;
        ResultSet doFind=null;
         try{
             find=dbconn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
              doFind = find.executeQuery("SELECT * FROM employee where Employee_name LIKE '%"+key+"%'");
             if (doFind.next()){
                 Employee_Table1.setModel(DbUtils.resultSetToTableModel(doFind));
             }else {
                 JOptionPane.showMessageDialog(this, "not Find", "Error", JOptionPane.ERROR_MESSAGE);
             }

         }catch (SQLException e){
             e.printStackTrace();
         }finally {
             try {
                 dbconn.close();
                 doFind.close();
                 find.close();
             } catch (SQLException ex) {
                 ex.printStackTrace();
             }
         }
    }

    void EmSer(){
        e.openToGet();
        List<Employee> addE=e.readData();
        e.closeFile();

        c.openToGet();
        List<Account> addC=c.readData();
        c.closeFile();

        int last_id=0;
        int i=0;
            for (Employee e : addE) {
                PreparedStatement id_p=null;
                ResultSet resultSet=null;
                PreparedStatement insert_id=null;
                PreparedStatement st=null;
                DB t=new DB();
                Connection dbconn=t.connectDB();
                try {
                 id_p = (PreparedStatement) dbconn.prepareStatement("SELECT * FROM person");
                 resultSet = id_p.executeQuery();

                while (resultSet.next()) {
                    last_id = resultSet.getInt("id");
                }

          int s=last_id+1;
           insert_id=(PreparedStatement) dbconn.prepareStatement("insert into person(id) value (?)");
          insert_id.setInt(1,s);
          int res =insert_id.executeUpdate();
          if (res==1){
               st = (PreparedStatement) dbconn.prepareStatement("insert into employee(Employee_id,Employee_name ,Employee_address ,Employee_Email,supervise_id) values (?,?,?,?,4)  ");
              st.setInt(1, s);
              st.setString(2, e.getName());
              st.setString(3, e.getAddress());
              st.setString(4, e.getEmail());
              int res2 = st.executeUpdate();
              if (res2 == 1) {
                  PreparedStatement st1 = (PreparedStatement) dbconn.prepareStatement("insert into account(username ,password,person_id,rule) values (?,?,?,?)");
                  st1.setString(1, addC.get(i).getUsername());
                  st1.setString(2, addC.get(i).getPassword());
                  st1.setInt(3, s);
                  st1.setString(4, "e");
                  int res1 = st1.executeUpdate();
                  if (res1==1) {
                      i++;
//                      JOptionPane.showMessageDialog(this, "Employee Added", "done!", JOptionPane.INFORMATION_MESSAGE);
                  }              }
          }
      }  catch (SQLException ex) {
            ex.printStackTrace();
        }finally {
                    try {
                        dbconn.close();
                        id_p.close();
                        insert_id.close();
                        resultSet.close();
                        st.close();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
        }
    }




}
